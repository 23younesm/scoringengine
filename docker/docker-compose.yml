---
version: '2.2'
services:
  redis:
    build:
      context: ../
      dockerfile: docker/redis/Dockerfile
    command: redis-server
    networks:
      - default
  base:
    build:
      context: ../
      dockerfile: docker/base/Dockerfile
  worker:
    build:
      context: ../
      dockerfile: docker/worker/Dockerfile
    depends_on:
      - base
      - redis
    command: bash -c 'sleep 120 && /app/bin/worker'
    scale: 3
    networks:
      - default
  engine:
    build:
      context: ../
      dockerfile: docker/engine/Dockerfile
    depends_on:
      - base
      - redis
    command: bash -c 'sleep 120 && /app/bin/engine'
    networks:
      - default
  bootstrap:
    build:
      context: ../
      dockerfile: docker/bootstrap/Dockerfile
    command: bash -c 'sleep 30 && python3.5 /app/bin/populate_db'
    networks:
      - default
  nginx:
    build:
      context: ../
      dockerfile: docker/nginx/Dockerfile
    depends_on:
      - flask
    command: /usr/sbin/nginx
    ports:
      - 80:80
    networks:
      - default
  flask:
    build:
      context: ../
      dockerfile: docker/flask/Dockerfile
    command: bash -c 'sleep 60 && python3.5 /app/run.py'
    networks:
      - default
  mysql:
    image: mysql:latest
    networks:
      - default
    environment:
     - MYSQL_ROOT_PASSWORD=CHANGEME
     - MYSQL_DATABASE=scoring_engine
     - MYSQL_USER=se_user
     - MYSQL_PASSWORD=CHANGEME


networks:
  default: